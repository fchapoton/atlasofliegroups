<all.at
<twisted_endoscopy.at

set G=GL(5,R)
set delta=G.distinguished_involution
set (H,M)=endoscopic(G,delta)
set H=H.split_form
set all_G=unipotent_representations(G)
set all_H=unipotent_representations(H)
set all_G_rho=fixed_block_of(delta,G.trivial)
set all=all_G_rho

set p=all_H[5]
set E_G=lift_std(p,M,G,delta)
set p_G=E_G.parameter
set ecf=extended_character_formula(p_G,delta)
set m=monomials(ecf)
set unipotents_H=unipotent_representations(H)
set all=unipotents_H
set p=all[2]
set x=p.x
set unipH=unipotents_H[6]
{set p=first_param(lift(unipH,M,G,delta))}
{
set lifts=for p in block_of(H.trivial) do (p,first_param(lift(p,M,G,delta))) od

set lifts_u=remove_duplicates(for (,p) in lifts do p od)
}

{set pFB=partial_extended_block(p,delta)
set FB=fixed_block_of(delta,p) 
set (I_delta_F,g_F,complete_indices_F,delta_action_F)=tabulate_indices(pFB,delta)
set Bs=singular_block_of(p)
set (I_delta_s,g_s,complete_indices_s,delta_action_s)=tabulate_indices(Bs,delta)
set PF=big_KL_P_signed_polynomials(p,delta)
set Ps=big_KL_P_signed_polynomials(Bs,delta)

set index_F=find(complete_indices_F,(find(pFB,p),1))
set index_s=find(complete_indices_s,(find(Bs,p),1))


}