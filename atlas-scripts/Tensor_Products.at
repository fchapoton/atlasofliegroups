<nilpotent_orbits.at

set move_weight ((KGBElt x,ratvec mu),KGBElt y) = (KGBElt,ratvec):
  assert(real_form(x)=real_form(y),"Real form mismatch");
  let w=cross_divide(y,x) in (y,w*mu)


set add_weight (Param p, KGBElt x, ratvec H)=Param:
   let y=x(p), lam=lambda(p) then (z,w)=move_to_distinguished_fiber(y)
   then (,new_H)=move_weight((x,H),z) in
   parameter(y,lam+inverse(w)*new_H,nu(p))

set add_weight (ParamPol P, KGBElt x, ratvec H)=ParamPol:
   let result=null_module(real_form(x)) in
   for coeff@p in P do result+:=coeff*(standardize(add_weight (p,x,H)))*0 od;
   result

set add_weight (K_Type mu, KGBElt x, ratvec H)=ParamPol:
   let P=K_type_formula(mu) in add_weight(P,x,H)

set Tensor_product_Sp4 (K_Type mu, K_Type tau)=K_Type_Pol:
   let (,x,H)=highest_weight(tau),n=dimension(tau) then root=2*rho_c(x)
   then result=null_module(real_form(x)) in
   for i:n do result+:=add_weight(mu,x,H-i*root) od;
   branch_std(result,100)
