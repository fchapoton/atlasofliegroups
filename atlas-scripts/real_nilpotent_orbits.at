<complex_nilpotent_orbits.at

{a real nilpotent orbit is a pair ([int] H,KGBElt x)
 note the order, to distinguish from KHighestWeight (KGBElt x,vec H) (see K.at)
 x should in the distinguished fiber
 H\in X_* is the semisimple element of a Lie triple
 \theta_x(H)=H
 set \q=parabolic_by_cwt(x,H), then
 orbit=induced from trivial orbit of Levi factor, equivalently
      =associated variety of A_q(lambda)
 H must satisfy <\alpha,H>\in {0,1,2} for all simple alpha
 (in particular H is dominant)
 not all such H are allowed
 if (H,x) is given, with H non-dominant, replace it with (wx,wH)
}

set_type RealNilpotentOrbit = ([int] H,KGBElt x)

set parabolic_of_orbit (RealNilpotentOrbit O) = Parabolic:
  parabolic_by_cwt(O.H,O.x)
{caution: O.Levi gives the wrong answer due to conflict with KGPElt}
set Levi_of_orbit (RealNilpotentOrbit O) = RealForm: Levi(parabolic_of_orbit(O))
set root_datum (RealNilpotentOrbit O) = RootDatum: O.x.root_datum
set real_form (RealNilpotentOrbit O) = RealForm: O.x.real_form
set complex_orbit (RealNilpotentOrbit O) = ComplexNilpotent: (O.root_datum,O.H)
set dimension (RealNilpotentOrbit O) = int: dim_nilpotent(O.complex_orbit)

set simple_roots_from_coweight (RootDatum rd, ratvec v) = [int]:
##for alpha@i in simple_roots(rd) do if =alpha*v then [i] else [] fi od

set simple_roots_from_coweights (RootDatum rd,[ratvec] list) = [[int]]:
  for v in list do simple_roots_from_coweight(rd,v) od

set find ([RealNilpotentOrbit] list,RealNilpotentOrbit O)=int:
first(#list,(int i)bool:list[i].root_datum=O.root_datum and list[i].H=O.H)

{ coweights is a list of coweights H, each of which defines a parabolic with
  simple roots alpha such that alpha*H=0
}

set potential_real_nilpotent_orbits_old(RealForm G,ComplexNilpotent complex_orbit)=[RealNilpotentOrbit]:
let (rd,H)=complex_orbit then
roots_of_Levi=simple_roots_from_coweight(rd,H) then
P_complex= (rd,roots_of_Levi) then
theta_stable_parabolics=theta_stable_parabolics(G,P_complex) in
for P in theta_stable_parabolics do RealNilpotentOrbit:(H,x_min(P)) od

set potential_real_nilpotent_orbits(RealForm G,ComplexNilpotent complex_orbit)=[RealNilpotentOrbit]:
let (rd,H)=complex_orbit then
(H_dom,w)=from_dominant(H,G) then 
{()=prints("H_dom:",H_dom, " w:", w) then}
roots_of_Levi=simple_roots_from_coweight(rd,H_dom) then
P_complex= (rd,roots_of_Levi) then
theta_stable_parabolics=theta_stable_parabolics(G,P_complex) in
for P in theta_stable_parabolics do RealNilpotentOrbit:(H_dom*w,cross(w,x_min(P))) od

set potential_real_nilpotent_orbits(RealForm G,[ComplexNilpotent] complex_orbits)=[RealNilpotentOrbit]:
##for OC in complex_orbits do potential_real_nilpotent_orbits(G,OC) od

set potential_real_nilpotent_orbits(RealForm G)=[RealNilpotentOrbit]:
potential_real_nilpotent_orbits(G,complex_nilpotent_orbits(G))


set test_real([int] H,KGBElt x, [int] simple_roots_of_M)=
let  G=x.real_form then
L=Levi_of_orbit(H,x) then
()=prints("L=",L) then
d=dimension(K_0(L)) then
MC=complex_Levi(G,simple_roots_of_M) then
()=prints("x=",x) then
()=prints("H=",H) then
S=## for a@i in simple_roots(MC) do if a*H=2 then [i] else [] fi od then
()=prints("S=",S) then
theta=involution(x) then
ic=inner_class(MC,theta) then
dim_center=rank(lie_compact_radical(ic)) then 
M=real_form(ic,theta,torus_factor(x)) then
()=prints("M=",M) then
()=prints("simple roots of M:", simple_roots(M)) then
x_M=inverse_embed_KGB(x,M) then
()=prints("posroot of M:", posroots(M)) then
roots=##for alpha in posroots(M) do 
 if is_noncompact_imaginary(alpha,x_M) and alpha*H=2 then [alpha] else [] fi od then
number_roots=#roots in
prints("LHS: ", d, new_line, "center(M)^x: ", dim_center, " roots:" , number_roots, new_line, roots);
d=dim_center+number_roots