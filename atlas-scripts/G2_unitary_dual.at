<coordinates.at
<lietypes.at

set Cartan_classes(RealForm G)=[CartanClass]:
##for H in Cartan_classes(G) do
 if #KGB(H,G)>0 then [H] else [] fi od

set my_G2_simple_roots=[vec]:[[1,-1,0],[-2,1,1]]

{change_matrix: (3 rows, 2 cols) integer matrix: Z^2 -> Z^3
 i_change_matrix: (2 rows, 3 cols) rational matrix: Q^3 -> Q^2
 i_change_matrix * change_matrix = Id_2
 [change_matrix * i_change_matrix is 3x3, rational, NOT Identity]
}

set change_matrix=ratmat: change_basis(simply_connected(G2),ratvecs_as_ratmat(my_G2_simple_roots))


set i_change_matrix=ratmat: inverse_change_basis(simply_connected(G2),ratvecs_as_ratmat(my_G2_simple_roots))

{change: roots of G2: [x,y] coordinate to [a,b,c] coordinates
 i_change: roots of G2: [a,b,c] coordinates to [x,y] coordinates}

{
i_change(my_G2_simple_roots [0])=G.simple_roots[0]
Value: true
atlas> i_change(my_G2_simple_roots [1])=G.simple_roots[1]
Value: true
}

set change(ratvec v)=ratvec: change_matrix*v   {Z^2 -> Z^3}
set i_change(ratvec v)=ratvec: i_change_matrix*v

set G2_parameter(KGBElt x, ratvec lambda,ratvec nu)=Param:
parameter(x,i_change(lambda), i_change(nu))


{Cartan# long roots   name in paper
 0	 imaginary    H_c
 1	 real	      H_2
 2       imaginary    H_1
 3       real         H_3
}

{set G2_param_H2(int m,}