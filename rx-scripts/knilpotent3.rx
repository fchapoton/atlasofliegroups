<knilpotent2.rx
<nilpotent.rx {for lists of orbits}

set find([ratvec] vectors,ratvec v)=int:
let done=false,rv=-1,i=0 in
while done=false and i<#vectors do
 if vectors[i]=v then done:=true;rv:=i else i:=i+1 fi od;rv

set flatten([[int]] v)=
let rv=[int]:[] in
for a in v do for b in a do rv#:=b od od;rv

{
set W_mod_WK(KGBElt x)=[W_word]:cross_W_orbit_W_elements(x)
set W_mod_WK(RealForm G)=[W_word]:cross_W_orbit_W_elements(KGB(G,0))

{[W_word]:S is list of representatives of W/subgroup, return 
distinct list of {w.v|w\in S}
}
set cross_W_quotient_orbits([W_word] S,ratvec v)=
let rv=[[v]] in
for w in S do let u=act(w,v) in if find(rv,u)=-1 then rv#:=u fi od;rv



}


{


set all_theta_stable_parabolics(KGBElt x)=
set lambda=nilpotent_lambdas(real_form(x)) then}