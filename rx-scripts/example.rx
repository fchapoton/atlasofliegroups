{twisting of parameters directly on (x,lambda,nu)}

{this is an example of two blocks with 6 elements
G=SL(2)xSL(2)xT/<-I,-I,-1>
one block is at rho =(1,1,0), and all 6 elements are delta-fixed
the other is at (3/2,1,0), and only 4 elements are delta-fixed
see Examples of extended parameters/braid relations, sections 4-5}

set rd=root_datum(Lie_type("A1.A1.T1"),[[1/2,1/2,1/2]])
set ic=inner_class(rd,"sss")
set G=quasisplit_form(ic)
set dual_rd=dual(rd)
set dual_ic=dual(ic)
set Gd=quasisplit_form(dual_ic)

set delta=mat:[[1,0,0],[0,1,0],[-1,0,-1]]
prints("delta: ", delta, "delta^2 = I: ", delta^2=id_mat(3))
prints("delta preserves simple roots: ", delta*simple_roots(ic)=simple_roots(ic))
prints("^delta preserves simple coroots: ", ^delta*simple_coroots(ic)=simple_coroots(ic))

prints("trivial block of G:");
set (B_trivial,)=block(trivial(G))
print_block(trivial(G))
prints("infinitesimal character: ", infinitesimal_character(B_trivial[0]))
prints("Parameters fixed by twisting by delta:")
my_fixed(B_trivial,delta)
prints("");
set v_trivial=get_central_shift(B_trivial[0])
set E_trivial=E(delta,B_trivial[0],rho_check(G),v_trivial)
set basis_trivial=generate_subspace(0,1,E_trivial)
set M_trivial=hecke_matrix(0,delta,rho(G),rho_check(G),basis_trivial,v_trivial)
set N_trivial=hecke_matrix(1,delta,rho(G),rho_check(G),basis_trivial,v_trivial)

set p=parameter(KGB(G,4),[0,1,1],[3/2,2/2,0/2])
set (B_p,)=block(p)
print_block(p)
prints("infinitesimal character: ", infinitesimal_character(B_p[0]))
prints("Parameters fixed by twisting by delta:")
my_fixed(B_p,delta)
prints("");
prints("parameter 4: ", B_p[4]);
prints("delta*(parameter 4): ", twist(B_p[4],delta));
prints("      (parameter 5): ", B_p[5]);
set v_p=get_central_shift(B_p[0])
set E_p=E(delta,B_p[0],rho_check(G),v_p)
set basis_p=generate_subspace(0,1,E_p)
set M_p=hecke_matrix(0,delta,infinitesimal_character(p),rho_check(G),basis_p,v_p)
set N_p=hecke_matrix(1,delta,infinitesimal_character(p),rho_check(G),basis_p,v_p)
