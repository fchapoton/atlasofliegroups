* Mathematical work to be done
- Study what the unequal rank case is about, and how to do it

* Work on the Atlas library
- Incorporate the calculation of c-invariant forms into the library
- Rewrite block construction using methods inspired by synthetic operations
- Rewrite K type computations to use data type more compatible with Param

* Work on the atlas program

- correct bug with mysterious typeahead after bailing out with ? (done?)
- clean up the mess dealing with input (interface/input, io/interactive...)

* Work on the realex program

e types, as well as disjoint union types.
- Allow encapsulation into user-defined types

- Ensure that root data obtained from inner classes or beyond are shared
- Avoid creating many identical |real_form_value| instances, by storing links
  to those currently generated within an |inner_class_value| object
- Check if efficiency features actually work as intended
  For instance v[i]=k should usually avoid a copy of v being made. Also see
  if something can be done to avoid duplication in a +:= x (probably not, as
  one knows nothing about what + does). However, for v #:= x in a loop it
  should be possible to avoid a new allocation for v at every iteration.
- Duplication avoiding in component assignment
- For loops in void context never build up any value.

* Work on the realex scripts
- Complete the groups in groups.rx (types G,F); also avoid use of "s" etc.
- Study and rewrite Jeffs scripts to see what can be put into the library

* Work on documentation

* Work on makefiles, distribution and support programs (cwebx)
- Change interpreter/Makefile so it does not remake io/fliekl.cpp and friends
- Figure out how to avoid 'unrecognised typedef at line 367 of atlas_types.h'
- Make cweavex format a 2-line "do x; while(y);" with cirrect indentation
- Make cwebx messages mention file name, to 'make -jN' output comprehensible
- Add some make targets for recording options as suggested by Nelson Beebe
